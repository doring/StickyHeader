apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

version '1.0'
group 'com.doring'

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "doring"
            name "jinwoo An"
            email "imjin3j@gmail.com"
        }
    }

    scm {
        url "https://github.com/doring/StickyHeader.git"
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
task javadoc(type: Javadoc) {
    exclude '**/R.html', '**/R.*.html', '**/index.html', '**/*.kt'
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar

            groupId 'com.doring'
            artifactId 'sticky-header'
            version this.version

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }

                asNode().children().last() + pomConfig
            }
        }
    }
}

bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    publications = ['Production']
    configurations = ['archives']

    pkg {
        repo = 'maven'
        name = 'sticky-header'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/doring/StickyHeader.git'
        labels = ['android', 'sticky', 'header']
        description = "A simple recycle view decoration that provide sticky header"
        publish = true
        publicDownloadNumbers = true
        override = true
        version {
            name = this.version
            released = new Date()
            vcsTag = this.version
        }
    }
}